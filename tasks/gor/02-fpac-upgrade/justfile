set dotenv-load

export rpcUrl := env_var('ETH_RPC_URL')
export signatures := env_var_or_default('SIGNATURES', '')
export bundle := "input"
export location := `pwd`
export OWNER_SAFE := env_var('PROXY_ADMIN_OWNER')

# Default recipe to list all available recipes
default:
  just --list

# Simulates the deployment of the FPAC system
simulate-deploy hdPath='0':
  #!/usr/bin/env bash
  cd ../..
  if [ t"$SIMULATE_WITHOUT_LEDGER" == t1 ]
  then
    signer="0xEA96f8d33Af98839C20547D970EE0961f8865009"
  else
    signer=$(cast wallet address --ledger --mnemonic-derivation-path "m/44'/60'/{{hdPath}}'/0/0")
  fi
  echo "Deploying FPAC system from ${signer}..."
  echo ""
  forge build
  forge script DeployFPAC \
    --rpc-url ${rpcUrl} \
    --sender ${signer} \
    --broadcast

# Deploys the FPAC system
deploy hdPath='0':
  #!/usr/bin/env bash
  cd ../..
  if [ t"$SIMULATE_WITHOUT_LEDGER" == t1 ]
  then
    signer="0xEA96f8d33Af98839C20547D970EE0961f8865009"
  else
    signer=$(cast wallet address --ledger --mnemonic-derivation-path "m/44'/60'/{{hdPath}}'/0/0")
  fi
  echo "Deploying FPAC system from ${signer}..."
  echo ""
  forge build
  forge script DeployFPAC \
    --rpc-url ${rpcUrl} \
    --sender ${signer} \
    --broadcast

# Simulates the signing of the `OptimismPortal` proxy upgrade transaction.
simulate hdPath='0':
  #!/usr/bin/env bash
  cd ../..
  echo "getting signer address..."
  if [ t"$SIMULATE_WITHOUT_LEDGER" == t1 ]
  then
    signer="0xEA96f8d33Af98839C20547D970EE0961f8865009"
  else
    signer=$(cast wallet address --ledger --mnemonic-derivation-path "m/44'/60'/{{hdPath}}'/0/0")
  fi
  echo "Simulating with: ${signer}"
  echo ""
  forge build
  forge script SignFromJson \
    --rpc-url ${rpcUrl} \
    --sig "signJson(string)" \
    "${location}/${bundle}.json" \
    --sender ${signer}

# Signs the `OptimismPortal` proxy upgrade transaction.
sign hdPath='0':
  #!/usr/bin/env bash
  cd ../..
  echo "getting signer address..."
  signer=$(cast wallet address --ledger --mnemonic-derivation-path "m/44'/60'/{{hdPath}}'/0/0")
  echo "Signing with: ${signer}"
  echo ""
  forge build
  $(git rev-parse --show-toplevel)/bin/eip712sign --ledger --hd-paths "m/44'/60'/{{hdPath}}'/0/0" -- \
  forge script SignFromJson \
    --rpc-url ${rpcUrl} \
    --sig "signJson(string)" \
    "${location}/${bundle}.json"

# Executes the `OptimismPortal` proxy upgrade transaction.
execute hdPath='0':
  #!/usr/bin/env bash
  cd ../..
  sender=$(cast wallet address --ledger --mnemonic-derivation-path "m/44'/60'/{{hdPath}}'/0/0")
  forge build
  forge script --fork-url ${ETH_RPC_URL} SignFromJson \
    --sig "runJson(string,bytes)" "${location}/${bundle}.json" ${SIGNATURES} \
    --ledger --hd-paths "m/44'/60'/{{hdPath}}'/0/0" --broadcast \
    --sender ${sender}
